swagger: "2.0"
info:
  description: "CEMS v2 API"
  version: "2.0.0"
  title: "CEMS API V2"
host: "api.hceu-sandbox.com"
basePath: "/api/v2"

paths:
  /company/user:
    post:
      tags:
        - "Company"
      summary: "Add company member"
      description: "Add create a new user within a specific company"
      operationId: "addCompanyMember"
      parameters:
        - in: "body"
          name: "body"
          description: "Company Member"
          required: true
          schema:
            $ref: "#/definitions/CompanyMember"
      responses:
        201:
          description: "User was created"
          schema:
            type: "object"
            required: 
              - "data"
            properties: 
              data: 
                type: "object"
                required: 
                  - "user_id"
                properties: 
                  user_id: 
                    type: integer
                    example: 271930
            
        403:
          description: "user was authenticated but not authorized"
        409:
          description: "User already exists (probably duplicate employee_id)"
        422:
          description: "Cannot process the request with the provided information"
          
  /company/{companyId}/user/{userId}:
    get:
      tags:
        - "User"
      summary: ""
      description: ""
      operationId: "userDetails"
      parameters:
        - name: "companyId"
          in: "path"
          description: ""
          required: true
          type: "integer"
        - name: "userId"
          in: "path"
          description: ""
          required: true
          type: "integer"
      responses:
        200:
          description: "success"
          schema:
            $ref: "#/definitions/UserDetail"
        403:
          description: "user was authenticated but not authorized"
        404:
          description: "Company or User not found"
      
          
  /license-type:
    get:
      tags:
        - "User Licenses"
      summary: "list of possible license types"
      description: ""
      operationId: "licenseTypeList"
      responses:
        200:
          description: "success"
          schema:
            type: "object"
            required: 
              - "data"
            properties: 
              data: 
                type: "array"
                items:
                  type: "object"
                  required: 
                    - "constant"
                  properties: 
                    constant: 
                      type: string
                      example: "pt"
                    name:
                      type: string
                      example: "PT"
        401:
          description: "not authenticated"
      
  
  /user/{userId}/license:
    post:
      tags:
        - "User Licenses"
      summary: "Add user license"
      description: "add licenses for user"
      operationId: "addUserLicense"
      parameters:
        - name: "userId"
          in: "path"
          description: ""
          required: true
          type: "integer"
        - in: "body"
          name: "body"
          description: "User License"
          required: true
          schema:
            $ref: "#/definitions/UserLicense"
      responses:
        201:
          description: "success"
          schema:
            type: "object"
            required: 
              - "data"
            properties: 
              data: 
                type: "object"
                required: 
                  - "id"
                properties: 
                  id: 
                    type: integer
                    description: "user-license Id"
                    example: 426646
        403:
          description: "user was authenticated but not authorized"
        422:
          description: "Cannot process the request with the provided information"

  /user/{userId}/license/{userLicenseId}:
    delete:
      tags:
        - "User Licenses"
      summary: "Remove user license"
      description: "remove licenses for user"
      operationId: "removeUserLicense"
      parameters:
        - name: "userId"
          in: "path"
          description: ""
          required: true
          type: "integer"
        - name: "userLicenseId"
          in: "path"
          description: ""
          required: true
          type: "integer"
      responses:
        200:
          description: "success"
        403:
          description: "user was authenticated but not authorized"
        404:
          description: "User or User License was not found"


  /company/{companyId}/course/{courseId}:
    get:
      tags:
        - "Company"
      summary: "Company Catalog Course Detail"
      description: "get detail for company course"
      operationId: "getCompanyCourse"
      parameters:
        - name: "companyId"
          in: "path"
          description: ""
          required: true
          type: "integer"
        - name: "courseId"
          in: "path"
          description: ""
          required: true
          type: "integer"
      responses:
        200:
          description: "success"
          schema:
            $ref: "#/definitions/CourseCatalogCourseDetail"
        403:
          description: "user was authenticated but not authorized"
        404:
          description: "Company or course not found in company"
          
  /enrollment/{enrollmentId}:
    get:
      tags:
        - "Enrollments"
      summary: "enrollment details"
      description: ""
      operationId: "getEnrollmentDetails"
      parameters:
        - name: "enrollmentId"
          in: "path"
          description: "enrollment / registration ID"
          required: true
          type: "integer"
      responses:
        200:
          description: "success"
          schema:
            $ref: "#/definitions/Enrollment"
        403:
          description: "user was authenticated but not authorized"
        404:
          description: "Enrollment not found"

  /enrollment/{enrollmentId}/reportToAsha:
    post:
      tags:
        - "Enrollments"
      summary: "report completion to ASHA"
      description: ""
      operationId: "reportEnrollmentToAsha"
      parameters:
        - name: "enrollmentId"
          in: "path"
          description: "enrollment / registration ID"
          required: true
          type: "integer"
        - name: "body"
          in: "body"
          description: "Learner Asha Number, required if we do not have a number on file for the learner"
          required: false
          schema:
            type: "object"
            required: 
              - "ashaNumber"
            properties: 
              ashaNumber: 
                type: "string"
                example: "271930"
            
      responses:
        204:
          description: "success"
        403:
          description: "user was authenticated but not authorized"
        404:
          description: "Enrollment not found"
        409:
          description: "We do not have asha number on file and one was not provided, please provide the asha number in the request body"


  /company/{companyId}/member/{learnerId}/completions:
    get:
      tags:
        - "Enrollments"
      summary: "Learner course completions"
      operationId: "getMemberTranscript"
      parameters:
        - name: "companyId"
          in: "path"
          description: ""
          required: true
          type: "integer"
        - name: "learnerId"
          in: "path"
          description: ""
          required: true
          type: "string"
      responses:
        200:
          description: "success"
          schema:
            $ref: "#/definitions/LearnerCompletions"
        403:
          description: "user was authenticated but not authorized"

  /accreditations:
    get:
      tags:
        - "Accreditation"
      summary: ""
      description: ""
      operationId: "getAccreditations"
      parameters:
        - name: "filter[courseId]"
          in: "query"
          description: ""
          required: true
          type: "integer"
        - name: "filter[activeOnDate]"
          in: "query"
          description: "Will limit results to approvals only active on provided date, use todays date, or the date of a past completion etc."
          required: true
          type: "string"
          format: "date"
        - name: "filter[discipline]"
          in: "query"
          description: "discipline constant"
          required: false
          type: "string"
        - name: "filter[state]"
          in: "query"
          description: "match any. example: TX,AR"
          required: false
          type: "array"
          items:
            type: "string"
            enum: ["AL","AK","AZ","AR","CA","CO","CT","DE","DC","FL","GA","HI","ID","IL","IN","IA","KS","KY","LA","ME","MD","MA","MI","MN","MS","MO","MT","NE","NV","NH","NJ","NM","NY","NC","ND","OH","OK","OR","PA","RI","SC","SD","TN","TX","UT","VT","VA","WA","WV","WI","WY"]
        # - name: "filter[activeAfterDate]"
        #   in: "query"
        #   description: "activeAfterDate and activeBeforeDate are used together to create a between date range"
        #   required: false
        #   type: "string"
        #   format: "date"
        # - name: "filter[activeBeforeDate]"
        #   in: "query"
        #   description: "activeAfterDate and activeBeforeDate are used together to create a between date range"
        #   required: false
        #   type: "string"
        #   format: "date"
        # - name: "page"
        #   in: "query"
        #   description: "used with limit to break list into pages"
        #   required: false
        #   type: "integer"
        # - name: "limit"
        #   in: "query"
        #   description: "limit the number of results"
        #   required: false
        #   type: "integer"
        # - name: "sort"
        #   in: "query"
        #   description: "sort by field"
        #   required: false
        #   type: "string"
        # - name: "direction"
        #   in: "query"
        #   description: "sort direction: asc | desc"
        #   required: false
        #   type: "string"
      responses:
        200:
          description: "success"
          schema:
            $ref: "#/definitions/Accreditations"
        403:
          description: "user was authenticated but not authorized"

definitions:
  Enrollment:
    type: "object"
    required: 
      - "data"
    properties: 
      links: 
        type: "object"
        properties:
          scormContent: 
            type: "string"
            description: "Link to consume SCORM content for this enrollment"
            example: "https://link.to.restici/registrationId"
            format: "uri"
          certificate: 
            type: "string"
            description: "Link to download certificate of completion"
            example: "https://link.to.certificate/enrollmentId"
            format: "uri"
      data:
        type: "object" 
        required: 
          - "id"
          - "userId"
          - "learnerId"
          - "courseId"
          - "courseName"
          - "companyId"
          - "companyName"
          - "format"
          - "hours"
          - "passingGrade"
          - "isPassing"
          - "assignmentDate"
        properties: 
          id: 
            type: "string"
            example: "3632108"
            description: "enrollmentId"
          userId: 
            type: "string"
            example: "97230"
          learnerId: 
            type: "string"
            example: "E1024"
          courseId: 
            type: "string"
            example: "1698"
          courseName: 
            type: "string"
            example: "HIV/AIDS - What You Need to Know"
          companyId: 
            type: "string"
            example: "4"
          companyName: 
            type: "string"
            example: "Demo University"
          curriculumId: 
            type: "string"
            example: "42"
          curriculumName: 
            type: "string"
            example: "HIV/AIDS"
          enrollmentType: 
            type: "string"
            example: "Assigned"
          format: 
            type: "string"
            example: "Text"
          hours: 
            type: "string"
            example: "1.00"
          completedOn: 
            type: "string"
            example: "2018-10-20"
            format: "date"
          attemptId: 
            type: "string"
            example: "3640761"
          highestGrade: 
            type: "string"
            example: "0.75"
          passingGrade: 
            type: "string"
            example: "0.70"
          isPassing: 
            type: "string"
            example: "0"
          assignmentDate: 
            type: "string"
            example: "2018-07-16"
            format: "date"
          dueDate: 
            type: "string"
            example: "2018-07-31"
            format: "date"
          expires: 
            type: "string"
            example: "1"
          examId: 
            type: "string"
            example: "290"
  CourseCatalogCourseDetail:
    type: "object"
    required: 
      - "data"
    properties: 
      links:
        type: "object"
        properties:
          sco: 
            type: "string"
            example: "/api/v2/company/153/course/9876/proxy/download"
            description: "Link to proxy sco file so it can be imported into another LMS"
            format: "uri"
          scoDetail:
            type: "string"
            format: "uri"
            example: "/api/v2/course/9876/sco"
          accreditations:
            type: "string"
            example: "/api/v2/accreditations?courseId=9876&activeOnDate=2020-01-30"
            description: "API Link to accreditations for course"
            format: "uri"
      data: 
        type: "object"
        required: 
          - "id"
          - "createdAt"
          - "courseId"
          - "isActive"
          - "companyId"
          - "name"
          - "description"
          - "format"
          - "instructionalLevel"
          - "bocInstructionalLevel"
          - "hours"
          - "outline"
          - "summary"
          - "goals"
          - "disciplines"
          - "categories"
          - "authors"
          - "clinicalTopics"
          - "isSearchable"
        properties: 
          id: 
            type: "string"
            example: "432"
          createdAt: 
            type: "string"
            example: "2016-01-15"
          courseId: 
            type: "string"
            example: "9876"
          isActive: 
            type: "boolean"
            example: true
          companyId: 
            type: "string"
            example: "153"
          name: 
            type: "string"
            example: "How to build a flux capacitor"
          description: 
            type: "string"
            example: "course description"
          format: 
            type: "string"
            example: "video"
          instructionalLevel: 
            type: "string"
            example: "Intermediate"
          bocInstructionalLevel: 
            type: "string"
            example: "Essential"
          hours: 
            type: "string"
            example: "1.5"
          outline: 
            type: "string"
            example: ""
          summary: 
            type: "string"
            example: ""
          goals: 
            type: "string"
            example: ""
          disciplines: 
            type: "array"
            items: 
              type: "object"
              properties: 
                id: 
                  type: "string"
                  example: "1"
                constant: 
                  type: "string"
                  example: "pt-pta"
                name: 
                  type: "string"
                  example: "PT/PTA"
          categories: 
            type: "array"
            items: 
              type: "object"
              properties: 
                id: 
                  type: "string"
                  example: "8"
                name: 
                  type: "string"
                  example: "Texas Physical Therapy Ethics"
          authors: 
            type: "array"
            items: 
              type: "object"
              properties: 
                id: 
                  type: "string"
                  example: "42"
                name: 
                  type: "string"
                  example: "Robert Martin"
          clinicalTopics: 
            type: "array"
            items: 
              type: "object"
              properties: 
                id: 
                  type: "string"
                  example: "5"
                name: 
                  type: "string"
                  example: "Aphasia"
          ashaCode: 
            type: "string"
            example: "ACGB0022"
          code: 
            type: "string"
            example: "HCEU229"
          isSearchable: 
            type: "boolean"
            example: true
  Accreditations:
    type: "object"
    required: 
      - "data"
    properties: 
      data: 
        required: 
          - "page"
          - "limit"
          - "total"
          - "items"
        properties: 
          # page: 
          #   type: "number"
          #   example: 1
          # limit: 
          #   type: "number"
          #   example: 10
          # total: 
          #   type: "number"
          #   example: 114248
          items: 
            type: "array"
            items: 
              type: "object"
              properties: 
                id: 
                  type: "string"
                  example: "112233"
                courseId: 
                  type: "string"
                  example: "9876"
                accreditingCompanyId: 
                  type: "string"
                  example: "1"
                discipline: 
                  required: 
                    - "id"
                    - "constant"
                    - "name"
                  properties: 
                    id: 
                      type: "string"
                      example: "1"
                    constant: 
                      type: "string"
                      example: "pt-pta"
                    name: 
                      type: "string"
                      example: "PT/PTA"
                  type: "object"
                states: 
                  type: "array"
                  items: 
                    type: "object"
                    properties: 
                      code: 
                        type: "string"
                        example: "TX"
                      name: 
                        type: "string"
                        example: "Texas"
                category: 
                  required: 
                    - "id"
                    - "name"
                  properties: 
                    id: 
                      type: "string"
                      example: "17"
                    name: 
                      type: "string"
                      example: "Interactive"
                  type: "object"
                status: 
                  required: 
                    - "id"
                    - "constant"
                    - "name"
                    - "isCredit"
                  properties: 
                    id: 
                      type: "string"
                      example: "1"
                    constant: 
                      type: "string"
                      example: "approved"
                    name: 
                      type: "string"
                      example: "Approved"
                    isCredit: 
                      type: "boolean"
                      example: true
                  type: "object"
                code: 
                  type: "string"
                  example: "P3633"
                hours: 
                  type: "string"
                  example: "2.5"
                statement: 
                  type: "string"
                  example: ""
                activationDate: 
                  type: "string"
                  example: "2020-01-01"
                expirationDate: 
                  type: "string"
                  example: "2020-12-31"
                mediaCompletionRequired: 
                  type: "boolean"
                  example: false
                ashaCourseNumber: 
                  type: "string"
                  example: "547"
                ceBrokerCourseNumber: 
                  type: "number"
                  example: 554433
  CompanyMember:
    required: 
      - "company_id"
      - "first_name"
      - "last_name"
      - "employee_id"
      - "access_level"
      - "is_active"
      - "is_coporate_admin"
    properties: 
      company_id: 
        type: "number"
        example: 153
      first_name: 
        type: "string"
        example: "Robert"
      last_name: 
        type: "string"
        example: "Martin"
      employee_id: 
        description: "learnerId, unique key to identify company member, often from HR platform"
        type: "string"
        example: "E2345"
      access_level: 
        type: "string"
        enum: ["limited","limited-plus","unlimited"]
        example: "unlimited"
      is_active: 
        type: "boolean"
        example: true
      is_coporate_admin: 
        type: "boolean"
        example: false
      asha_code: 
        description: "National ASHA Certification Number"
        type: "string"
        example: "A12345"
      email_address: 
        type: "string"
        example: "rmartin@example.com"
        format: "email"
      hire_date: 
        type: "string"
        example: "2018-02-13"
      organizational_unit_id: 
        type: "number"
        example: 987
      address_1: 
        type: "string"
        example: "1234 N Main st"
      address_2: 
        type: "string"
        example: ""
      city: 
        type: "string"
        example: "Dallas"
      state: 
        description: "State code (ex: 'TX', 'AR', 'VA')"
        type: "string"
        example: "TX"
      zip: 
        description: "Address Zip Code (ex: '00000', '00000-0000')"
        type: "string"
        example: "43449"
      country: 
        type: "string"
        example: "USA"
      phone_number: 
        type: "string"
        example: "555-555-5555"
      phone_number_type: 
        type: "string"
        enum: ["primary","alternate","fax"]
        example: "primary"
      phone_country: 
        description: "Country Code (ex: 'US')"
        type: "string"
        example: "US"
      license_type: 
        type: "string"
        example: "pt"
      license_state: 
        type: "string"
        example: "TX"
      license_number: 
        type: "string"
        example: "R3214"
      license_expires_on: 
        type: "string"
        example: "2020-12-31"
      group_ids: 
        type: "array"
        items: 
          type: "number"
        example: 
          - 4567
          - 9876

  LearnerCompletions:
    type: "object"
    required: 
      - "data"
    properties: 
      data: 
        required:
          - "items"
        properties:
          items: 
            type: "array"
            items: 
              required: 
                - "enrollmentId"
                - "learnerId"
                - "courseId"
                - "completedOn"
              properties:
                enrollmentId: 
                  type: "string"
                  example: "3632108"
                  description: "enrollmentId"
                learnerId: 
                  type: "string"
                  example: "E1024"
                courseId: 
                  type: "string"
                  example: "1698"
                courseName: 
                  type: "string"
                  example: "HIV/AIDS - What You Need to Know"
                completedOn: 
                  type: "string"
                  example: "2018-10-20"
                links:
                  type: "array"
                  items:
                    properties:
                      enrollmentDetail:
                        type: "string"
                        format: "url"
                        example: "/api/v2/enrollment/3632108"
                      certificate:
                        type: "string"
                        format: "url"
                        example: "/api/v2/enrollment/3632108/certificate"

  UserLicense:
    required: 
      - "license_type"
      - "license_number"
      - "license_expires_on"
      - "license_state"
    properties: 
      license_type: 
        type: "string"
        example: "pt"
      license_number: 
        type: "string"
        example: "123456"
      license_expires_on: 
        type: "string"
        example: "2020-03-31T05:00:00.000Z"
      license_state: 
        type: "string"
        example: "TX"

  UserDetail:
    required: 
      - "data"
    properties: 
      data: 
        required: 
          - "asha_code"
          - "first_name"
          - "last_name"
          - "temporary_username"
          - "billing_address"
          - "emails"
          - "licenses"
          - "shipping_address"
          - "phones"
          - "corporate"
        properties: 
          first_name: 
            type: "string"
            example: "Fred"
          last_name: 
            type: "string"
            example: "Smith"
          temporary_username: 
            type: "string"
            example: "fred@example.com"
          billing_address: 
            required: 
              - "type"
              - "address_1"
              - "city"
              - "state"
              - "zip_code"
            properties: 
              type: 
                type: "string"
                example: "billing"
              address_1: 
                type: "string"
                example: "101 Main St."
              address_2: 
                type: "string"
                example: ""
              city: 
                type: "string"
                example: "Bridgewater"
              state: 
                type: "string"
                example: "NJ"
              zip_code: 
                type: "string"
                example: "08807"
            type: "object"
          shipping_address: 
            required: 
              - "type"
              - "address_1"
              - "city"
              - "state"
              - "zip_code"
            properties: 
              type: 
                type: "string"
                example: "shipping"
              address_1: 
                type: "string"
                example: "101 Main St"
              address_2: 
                type: "string"
                example: ""
              city: 
                type: "string"
                example: "Bridgewater"
              state: 
                type: "string"
                example: "NJ"
              zip_code: 
                type: "string"
                example: "08807"
            type: "object"
          phones: 
            type: "array"
            items: 
              type: "object"
              properties: 
                id: 
                  type: "number"
                  example: 215024
                type: 
                  type: "string"
                  example: "primary"
                country: 
                  type: "string"
                  example: "US"
                number: 
                  type: "string"
                  example: "555-555-1911"
                extension: 
                  type: "string"
                  example: ""
          emails: 
            type: "array"
            items: 
              type: "object"
              properties: 
                id: 
                  type: "number"
                  example: 39406
                primary: 
                  type: "boolean"
                  example: true
                confirmed: 
                  type: "boolean"
                  example: true
                email_address: 
                  type: "string"
                  example: "fred@example.com"
          licenses: 
            type: "array"
            items: 
              type: "object"
              properties: 
                id: 
                  type: "number"
                  example: 123456
                type: 
                  type: "string"
                  example: "mt-lmt"
                state: 
                  type: "string"
                  example: "NJ"
                number: 
                  type: "string"
                  example: "18KT00089765"
                expires_on: 
                  type: "string"
                  example: "11/30/2018"
                is_valid: 
                  type: "boolean"
                  example: true
          corporate: 
            required: 
              - "employee_id"
              - "is_corporate_admin"
              - "is_active"
              - "access_level"
              - "email_address"
            properties: 
              employee_id: 
                type: "string"
                example: "278011"
                description: "learnerId aka employeeId, memberId, uniqueId"
              is_corporate_admin: 
                type: "boolean"
                example: false
              is_active: 
                type: "boolean"
                example: true
              access_level: 
                type: "string"
                example: "unlimited"
              email_address: 
                type: "string"
                example: "fred@example.com"
              group_ids: 
                type: "array"
                items: 
                  type: "object"
                example: []
            type: "object"
        type: "object"
