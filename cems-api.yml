swagger: "2.0"
info:
  description: "CEMS v2 API"
  version: "2.0.0"
  title: "CEMS API V2"
host: "api.hceu-sandbox.com"
basePath: "/api/v2"

paths:
  /company/{company_id}:
    get:
      tags:
        - "Company"
      summary: "Get company by the ID"
      description: ""
      parameters:
        - in: "path"
          name: "company_id"
          description: ""
          required: true
          type: "integer"
          pattern: '\d+'
      responses:
        200:
          description: "Success"
          schema:
            $ref: "#/definitions/GetCompany"
        401:
          description: "Access token was not authenticated"
        403:
          description: "Access token was authenticated but not authorized for this feature"
        404:
          description: "Company not found"
          
  /company/{company_id}/accesslevels:
    get:
      tags:
        - "Company"
      summary: "Access levels associated with a company"
      description: ""
      parameters:
        - in: "path"
          name: "company_id"
          description: ""
          required: true
          type: "integer"
          pattern: '\d+'
      responses:
        200:
          description: "Success"
          schema:
            $ref: "#/definitions/AccessLevels"
        401:
          description: "Access token was not authenticated"
        403:
          description: "Access token was authenticated but not authorized for this feature"

  /company/{company_id}/assignments/incomplete:
    get:
      tags:
        - "Company"
      summary: "List all incomplete courses for a company"
      description: ""
      parameters:
        - in: "path"
          name: "company_id"
          description: ""
          required: true
          type: "integer"
          pattern: '\d+'
      responses:
        200:
          description: "Success"
          schema:
            $ref: "#/definitions/AssignmentsIncomplete"
        401:
          description: "Access token was not authenticated"
        403:
          description: "Access token was authenticated but not authorized for this feature"
        404:
          description: "Company not found"
  /company/{company_id}/assignments/incomplete/metadata:
    get:
      tags:
        - "Company"
      summary: "Metadata for all incomplete courses for a given company"
      description: ""
      parameters:
        - in: "path"
          name: "company_id"
          description: ""
          required: true
          type: "integer"
          pattern: '\d+'
      responses:
        200:
          description: "Success"
          schema:
            $ref: "#/definitions/AssignmentsMeta"
        401:
          description: "Access token was not authenticated"
        403:
          description: "Access token was authenticated but not authorized for this feature"
        404:
          description: "Company not found"
  /company/{company_id}/access_level/{access_level_constant}/courses:
    get:
      tags:
        - "Company"
      summary: "Get all courses for a given company and access level"
      description: ""
      parameters:
        - name: "company_id"
          in: "path"
          description: ""
          required: true
          type: "integer"
          pattern: '\d+'
        - name: "access_level_constant"
          in: "path"
          description: ""
          required: true
          type: "string"
          pattern: '[\w-]+'
      responses:
        200:
          description: "Success"
          schema:
            $ref: "#/definitions/AccessLevelCourses"
        401:
          description: "Access token was not authenticated"
        403:
          description: "Access token was authenticated but not authorized for this feature"
        404:
          description: "Company or access level not found"
          
  /company/{company_id}/boc_instructional_level:
    get:
      tags:
        - "Company"
      summary: "Board of Certification instructional level"
      description: ""
      parameters:
        - in: "path"
          name: "company_id"
          description: ""
          required: true
          type: "integer"
          pattern: '\d+'
      responses:
        200:
          description: "Success"
          schema:
            $ref: "#/definitions/BOCLevel"
        401:
          description: "Access token was not authenticated"
        403:
          description: "Access token was authenticated but not authorized for this feature"
        404:
          description: "Company not found"
          
  /company/{company_id}/clinical_topic:
    get:
      tags:
        - "Company"
      summary: "List all clinical topics"
      description: ""
      parameters:
        - in: "path"
          name: "company_id"
          description: ""
          required: true
          type: "integer"
          pattern: '\d+'
      responses:
        200:
          description: "Success"
          schema:
            $ref: "#/definitions/ClinicalTopic"
        401:
          description: "Access token was not authenticated"
        403:
          description: "Access token was authenticated but not authorized for this feature"
        404:
          description: "Company not found"
  /company/{company_id}/corpadminreport:
    get:
      tags:
        - "Company"
      summary: "Get all corp admin reports for a company"
      description: ""
      parameters:
        - in: "path"
          name: "company_id"
          description: ""
          required: true
          type: "integer"
          pattern: '\d+'
      responses:
        200:
          description: "Success"
          schema:
            $ref: "#/definitions/CorpAdminReport"
        401:
          description: "Access token was not authenticated"
        403:
          description: "Access token was authenticated but not authorized for this feature"
        404:
          description: "Company not found"
  /company/{company_id}/course_type:
    get:
      tags:
        - "Company"
      summary: "Get list of course types"
      description: ""
      parameters:
        - in: "path"
          name: "company_id"
          description: ""
          required: true
          type: "integer"
          pattern: '\d+'
      responses:
        200:
          description: "Success"
          schema:
            $ref: "#/definitions/CourseType"
        401:
          description: "Access token was not authenticated"
        403:
          description: "Access token was authenticated but not authorized for this feature"
        404:
          description: "Company not found"
  /company/{company_id}/courses:
    get:
      tags:
        - "Company"
      summary: "Get courses for a given company"
      description: ""
      parameters:
        - in: "path"
          name: "company_id"
          description: ""
          required: true
          type: "integer"
          pattern: '\d+'
      responses:
        200:
          description: "Success"
          schema:
            $ref: "#/definitions/CompanyCourses"
        401:
          description: "Access token was not authenticated"
        403:
          description: "Access token was authenticated but not authorized for this feature"
        404:
          description: "Company not found"

  /company/{company_id}/curriculum:
    get:
      tags:
        - "Company"
      summary: "Get all curricula for a company"
      description: ""
      parameters:
        - in: "path"
          name: "company_id"
          description: ""
          required: true
          type: "integer"
          pattern: '\d+'
      responses:
        200:
          description: "Success"
          schema:
            $ref: "#/definitions/CompanyCurricula"
        401:
          description: "Access token was not authenticated"
        403:
          description: "Access token was authenticated but not authorized for this feature"
          
  /company/{company_id}/features:
    get:
      tags:
        - "Company"
      summary: "List enabled company features"
      description: ""
      parameters:
        - in: "path"
          name: "company_id"
          description: ""
          required: true
          type: "integer"
          pattern: '\d+'
      responses:
        200:
          description: "Success"
          schema:
            $ref: "#/definitions/CompanyFeatures"
        401:
          description: "Access token was not authenticated"
        403:
          description: "Access token was authenticated but not authorized for this feature"
  /company/{company_id}/filteredreport:
    get:
      tags:
        - "Company"
      summary: "Filtered reports for a company by ID of corp admin report"
      description: ""
      parameters:
        - in: "path"
          name: "company_id"
          description: ""
          required: true
          type: "integer"
          pattern: '\d+'
        - in: "query"
          name: "corp_admin_report_id"
          type: "integer"
          description: "The ID of the corp admin report"
          x-example: "?corp_admin_report_id=4"
        - in: "query"
          name: "filter_by_creator"
          type: "integer"
          description: "1 for true and 0 for false"
          x-example: "?filter_by_creator=0"
      responses:
        200:
          description: "Success"
          schema:
            $ref: "#/definitions/FilteredReport"
        401:
          description: "Access token was not authenticated"
        403:
          description: "Access token was authenticated but not authorized for this feature"
        404:
          description: "Company not found"
  /company/{company_id}/filterset:
    get:
      tags:
        - "Company"
      summary: "Get all filter sets for a given company"
      description: ""
      parameters:
        - in: "path"
          name: "company_id"
          description: ""
          required: true
          type: "integer"
          pattern: '\d+'
      responses:
        200:
          description: "Success"
          schema:
            $ref: "#/definitions/FilterSet"
        401:
          description: "Access token was not authenticated"
        403:
          description: "Access token was authenticated but not authorized for this feature"
        404:
          description: "Company not found"
  /company/{company_id}/instructional_level:
    get:
      tags:
        - "Company"
      summary: "List instructional levels"
      description: ""
      parameters:
        - in: "path"
          name: "company_id"
          description: ""
          required: true
          type: "integer"
          pattern: '\d+'
      responses:
        200:
          description: "Success"
          schema:
            $ref: "#/definitions/InstructLevel"
        401:
          description: "Access token was not authenticated"
        403:
          description: "Access token was authenticated but not authorized for this feature"
        404:
          description: "Company not found"
  
  /company/{company_id}/organizational-unit/list:
    get:
      tags:
        - "Company"
      summary: "List of organizational units for a company"
      description: ""
      parameters:
        - in: "path"
          name: "company_id"
          required: true
          type: "integer"
          pattern: '\d+'
      responses:
        200:
          description: "Success"
          schema:
            $ref: "#/definitions/OrgUnitList"
        401:
          description: "Access token was not authenticated"
        403:
          description: "Access token was authenticated but not authorized for this feature"
         
  /company/{company_id}/resource:
    get:
      tags:
        - "Company"
      summary: "List all company enabled resources"
      description: ""
      parameters:
        - in: "path"
          name: "company_id"
          required: true
          type: "integer"
          pattern: '\d+'
      responses:
        200:
          description: "Success"
          schema:
            $ref: "#/definitions/EnabledResources"
        401:
          description: "Access token was not authenticated"
        403:
          description: "Access token was authenticated but not authorized for this feature"
          
  /company/{company_id}/resource/{resource_constant}:
    get:
      tags:
        - "Company"
      summary: "Company enabled privileges for given resource"
      description: ""
      parameters:
        - name: "company_id"
          in: "path"
          description: ""
          required: true
          type: "integer"
          pattern: '\d+'
        - name: "resource_constant"
          in: "path"
          description: ""
          required: true
          type: "string"
      responses:
        200:
          description: "Success"
          schema:
            type: "object"
            required: 
              - "data"
            properties: 
              data: 
                type: "array"
                items: 
                  type: "object"
                  properties: 
                    name: 
                      type: "string"
                      example: "Add/Edit Users"
                    constant: 
                      type: "string"
                      example: "add-edit-users"
                    description: 
                      type: "string"
                      example: "Allow university corp admins to add/edit users"
        401:
          description: "Access token was not authenticated"
        403:
          description: "Access token was authenticated but not authorized for this feature"
        404:
          description: "Company or resource not found"
  /company/{company_id}/supervisingusers:
    get:
      tags:
        - "Company"
      summary: "List of users for supervisor field"
      description: ""
      parameters:
        - in: "path"
          name: "company_id"
          description: ""
          required: true
          type: "integer"
          pattern: '\d+'
      responses:
        200:
          description: "Success"
          schema:
            type: "object"
            required: 
              - "data"
            properties: 
              data: 
                type: "array"
                items: 
                  type: "object"
                  properties: 
                    id: 
                      type: "number"
                      example: 123456
                    firstName: 
                      type: "string"
                      example: "Jeff"
                    lastName: 
                      type: "string"
                      example: "Smith"
                    organizationalUnit: 
                      type: "string"
                      example: "Southern Branch"
        401:
          description: "Access token was not authenticated"
        403:
          description: "Access token was authenticated but not authorized for this feature"
        404:
          description: "Company not found"
  /company/{company_id}/user:
    get:
      tags:
        - "Company"
      summary: "Get a list of users in the company, if no filter provided will return all users"
      description: ""
      parameters:
        - name: "company_id"
          in: "path"
          description: ""
          required: true
          type: "integer"
          pattern: '\d+'
        - in: "query"
          name: "page"
          type: "integer"
          description: "Page of users to get"
          x-example: "?page=3"
        - in: "query"
          name: "limit"
          type: "integer"
          description: "Number of users per page"
          x-example: "?limit=5"
        - in: "query"
          name: "filter"
          type: "string"
          description: "Filter for each property on a user"
          x-example: "?filter[username]=jsmith1234"
        - in: "query"
          name: "sory"
          type: "string"
          description: "Order of users based on properties. A '-' indicates descending."
          x-example: "?sort=username"
      responses:
        200:
          description: "Success"
          schema:
            $ref: "#/definitions/UserFilters"
        401:
          description: "Access token was not authenticated"
        403:
          description: "Access token was authenticated but not authorized for this feature"
  /company/user:
    post:
      tags:
        - "User"
      summary: "Add company member"
      description: "Add create a new user within a specific company"
      operationId: "addCompanyMember"
      parameters:
        - in: "body"
          name: "body"
          description: "Company Member"
          required: true
          schema:
            $ref: "#/definitions/CompanyMember"
      responses:
        201:
          description: "User was created"
          schema:
            type: "object"
            required: 
              - "data"
            properties: 
              data: 
                type: "object"
                required: 
                  - "user_id"
                properties: 
                  user_id: 
                    type: integer
                    example: 271930
        403:
          description: "Access token was authenticated but not authorized for this feature"
        409:
          description: "User already exists (probably duplicate employee_id)"
        422:
          description: "Cannot process the request with the provided information"
          
  /company/{company_id}/group:
    get:
      tags:
        - "Company"
      summary: "Get a set of groups associated with the company"
      description: ""
      parameters:
        - name: "company_id"
          in: "path"
          description: ""
          required: true
          type: "integer"
      responses:
        200:
          description: "Success"
          schema:
            $ref: "#/definitions/GroupSet"
        401:
          description: "Access token was not authenticated"
        403:
          description: "Access token was authenticated but not authorized for this feature"
  /company/{company_id}/group/{group_id}:
    get:
      tags:
        - "Company"
      summary: "Get a group associated with the company by group ID"
      description: ""
      parameters:
        - name: "company_id"
          in: "path"
          description: ""
          required: true
          type: "integer"
          pattern: '\d+'
        - name: "group_id"
          in: "path"
          description: ""
          required: true
          type: "integer"
          pattern: '\d+'
      responses:
        200:
          description: "Success"
          schema:
            type: "object"
            required: 
              - "data"
            properties: 
              data:
                type: "object"
                required: 
                  - "id"
                  - "name"
                  - "users"
                properties: 
                  id: 
                    type: "number"
                    example: 123
                  name: 
                    type: "string"
                    example: "Clinical Staff"
                  users: 
                    type: "number"
                    example: 1
        401:
          description: "Access token was not authenticated"
        403:
          description: "Access token was authenticated but not authorized for this feature"
        404:
          description: "Company or group ID not found"
  /company/{company_id}/group/{group_id}/member:
    get:
      tags:
        - "Company"
      summary: "Get users for a group by company and group IDs"
      description: ""
      parameters:
        - name: "company_id"
          in: "path"
          description: ""
          required: true
          type: "integer"
          pattern: '\d+'
        - name: "group_id"
          in: "path"
          description: ""
          required: true
          type: "integer"
          pattern: '\d+'
      responses:
        200:
          description: "Success"
          schema:
            $ref: "#/definitions/GroupUsers"
        401:
          description: "Access token was not authenticated"
        403:
          description: "Access token was authenticated but not authorized for this feature"
        404:
          description: "Company or group ID not found"
  /company/{alias}/config:
    get:
      tags:
        - "Company"
      summary: "Gets company configuration by company domain alias"
      description: ""
      parameters:
        - in: "path"
          name: "alias"
          description: ""
          required: true
          type: "string"
      responses:
        200:
          description: "Success"
          schema:
            $ref: "#/definitions/AliasConfig"
        401:
          description: "Access token was not authenticated"
        403:
          description: "Access token was authenticated but not authorized for this feature"
        404:
          description: "Company domain alias not found"
          
  /company/{company_id}/login:
    post:
      tags:
        - "Company"
      summary: "Grants user access to our api for a given university"
      description: ""
      parameters:
        - name: "company_id"
          in: "path"
          description: ""
          required: true
          type: "integer"
        - in: "body"
          name: "body"
          description: ""
          required: true
          schema:
            type: "object"
            required:
              - "username"
              - "password"
              - "client_id"
            properties:
              username:
                type: "string"
                example: "email@example.com"
              password:
                type: "string"
                example: "abcd1234"
              client_id:
                type: "string"
                example: "123ab45c6def78g90hij"
      responses:
        200:
          description: "User was authenticated"
          schema:
            $ref: "#/definitions/UserLogin"
        401:
          description: "User was not authenticated"
        403:
          description: "User was authenticated but not authorized"
          
  /company/{companyId}/resources:
    get:
      tags:
        - "Company"
      summary: "Get a company's cms pages by the ID"
      description: ""
      parameters:
        - in: "path"
          name: "companyId"
          description: ""
          required: true
          type: "integer"
          pattern: '\d+'
      responses:
        200:
          description: "Success"
          schema:
            $ref: "#/definitions/ResourcePages"
        401:
          description: "Access token was not authenticated"
        403:
          description: "Access token was authenticated but not authorized for this feature"
        404:
          description: "Company not found"
          
  /company/{companyId}/user/{userId}:
    get:
      tags:
        - "Company"
      summary: "Get the user details"
      description: ""
      operationId: "userDetails"
      parameters:
        - name: "companyId"
          in: "path"
          description: ""
          required: true
          type: "integer"
        - name: "userId"
          in: "path"
          description: ""
          required: true
          type: "integer"
      responses:
        200:
          description: "success"
          schema:
            $ref: "#/definitions/UserDetail"
        401:
          description: "Access token was not authenticated"
        403:
          description: "Access token was authenticated but not authorized for this feature"
        404:
          description: "Company or User not found"
          
  /company/{company_id}/user/{user_id}/courses/{status}:
    get:
      deprecated: true
      tags:
        - "Company"
      summary: "Get courses for given status of user and company"
      description: This endpoint has been deprecated and will be removed in a future version. Please use /profile/enrollments instead"
      parameters:
        - name: "company_id"
          in: "path"
          required: true
          type: "integer"
          pattern: '\d+'
        - name: "user_id"
          in: "path"
          required: true
          type: "integer"
          pattern: '\d+'
        - name: "status"
          in: "path"
          required: true
          type: "string"
      responses:
        200:
          description: "Success"
        401:
          description: "Access token was not authenticated"
        403:
          description: "Access token was authenticated but not authorized for this feature"
  /course/{course_id}/approval:
    get:
      tags:
        - "Course"
      summary: "Active approvals for a course"
      description: ""
      parameters:
        - in: "path"
          name: "course_id"
          description: ""
          required: true
          type: "integer"
          pattern: '\d+'
      responses:
        200:
          description: "Success"
          schema:
            $ref: "#/definitions/CourseApproval"
        401:
          description: "Access token was not authenticated"
        403:
          description: "Access token was authenticated but not authorized for this feature"
        404:
          description: "Course not found"
  /course/{course_id}/materials:
    get:
      tags:
        - "Course"
      description: ""
      summary: "Course materials for a given course"
      parameters:
        - in: "path"
          name: "course_id"
          description: ""
          required: true
          type: "integer"
          pattern: '\d+'
      responses:
        200:
          description: "Success"
          schema:
            $ref: "#/definitions/CourseMaterials"
        401:
          description: "Access token not authenticated"
        404:
          description: "Course not found"
  /courses/company/{companyId}:
    get:
      tags:
        - "Company"
      description: ""
      summary: "Get all courses for a company"
      parameters:
        - in: "path"
          name: "companyId"
          description: ""
          required: true
          type: "integer"
          pattern: '\d+'
      responses:
        200:
          description: "Success"
          schema:
            type: "object"
            required: 
              - "data"
            properties: 
              data: 
                type: "array"
                items: 
                  type: "object"
                  properties: 
                    id: 
                      type: "number"
                      example: 1234
                    name: 
                      type: "string"
                      example: "Creating A Respectful Workplace"
                    curricula: 
                      type: "array"
                      items: 
                        type: "number"
                      example: 
                        - 999
                        - 1111
        401:
          description: "Access token was not authenticated"
        403:
          description: "Access token was authenticated but not authorized for this feature"
        404:
          description: "Company not found"
  /curriculum/{curriculum_id}:
    get:
      tags:
        - "Curriculum"
      description: ""
      summary: "Get a curriculum"
      parameters:
        - in: "path"
          name: "curriculum_id"
          description: ""
          required: true
          type: "integer"
          pattern: '\d+'
      responses:
        200:
          description: "Success"
          schema:
            $ref: "#/definitions/GetCurriculum"
        401:
          description: "Access token was not authenticated"
        403:
          description: "Access token was authenticated but not authorized for this feature"
  /license-type:
    get:
      tags:
        - "User Licenses"
      summary: "list of possible license types"
      description: ""
      operationId: "licenseTypeList"
      responses:
        200:
          description: "Success"
          schema:
            type: "object"
            required: 
              - "data"
            properties: 
              data: 
                type: "array"
                items:
                  type: "object"
                  required: 
                    - "constant"
                  properties: 
                    constant: 
                      type: string
                      example: "pt"
                    name:
                      type: string
                      example: "PT"
        401:
          description: "Access token was not authenticated"
        403:
          description: "Access token was authenticated but not authorized for this feature"
      
  /user/{userId}/license:
    post:
      tags:
        - "User Licenses"
      summary: "Add user license"
      description: "add licenses for user"
      operationId: "addUserLicense"
      parameters:
        - name: "userId"
          in: "path"
          description: ""
          required: true
          type: "integer"
        - in: "body"
          name: "body"
          description: "User License"
          required: true
          schema:
            $ref: "#/definitions/UserLicense"
      responses:
        201:
          description: "success"
          schema:
            type: "object"
            required: 
              - "data"
            properties: 
              data: 
                type: "object"
                required: 
                  - "id"
                properties: 
                  id: 
                    type: integer
                    description: "user-license Id"
                    example: 426646
        401:
          description: "Access token was not authenticated"
        403:
          description: "Access token was authenticated but not authorized for this feature"
        422:
          description: "Cannot process the request with the provided information"

  /user/{userId}/license/{userLicenseId}:
    delete:
      tags:
        - "User Licenses"
      summary: "Remove user license"
      description: "remove licenses for user"
      operationId: "removeUserLicense"
      parameters:
        - name: "userId"
          in: "path"
          description: ""
          required: true
          type: "integer"
        - name: "userLicenseId"
          in: "path"
          description: ""
          required: true
          type: "integer"
      responses:
        200:
          description: "Success"
        403:
          description: "Access token was authenticated but not authorized for this feature"
        404:
          description: "User or User License was not found"
          
  /company/{companyId}/course/{courseId}:
    get:
      tags:
        - "Company"
      summary: "Company Catalog Course Detail"
      description: "get detail for company course"
      operationId: "getCompanyCourse"
      parameters:
        - name: "companyId"
          in: "path"
          description: ""
          required: true
          type: "integer"
        - name: "courseId"
          in: "path"
          description: ""
          required: true
          type: "integer"
      responses:
        200:
          description: "success"
          schema:
            $ref: "#/definitions/CourseCatalogCourseDetail"
        403:
          description: "Access token was authenticated but not authorized for this feature"
        404:
          description: "Company or course not found in company"
          
  /enrollment/{enrollmentId}:
    get:
      tags:
        - "Enrollments"
      summary: "enrollment details"
      description: ""
      operationId: "getEnrollmentDetails"
      parameters:
        - name: "enrollmentId"
          in: "path"
          description: "enrollment / registration ID"
          required: true
          type: "integer"
      responses:
        200:
          description: "success"
          schema:
            $ref: "#/definitions/Enrollment"
        403:
          description: "Access token was authenticated but not authorized for this feature"
        404:
          description: "Enrollment not found"

  /enrollment/{enrollmentId}/reportToAsha:
    post:
      tags:
        - "Enrollments"
      summary: "report completion to ASHA"
      description: ""
      operationId: "reportEnrollmentToAsha"
      parameters:
        - name: "enrollmentId"
          in: "path"
          description: "enrollment / registration ID"
          required: true
          type: "integer"
        - name: "body"
          in: "body"
          description: "Learner Asha Number, required if we do not have a number on file for the learner"
          required: false
          schema:
            type: "object"
            required: 
              - "ashaNumber"
            properties: 
              ashaNumber: 
                type: "string"
                example: "271930"
            
      responses:
        204:
          description: "success"
        403:
          description: "Access token was authenticated but not authorized for this feature"
        404:
          description: "Enrollment not found"
        409:
          description: "We do not have asha number on file and one was not provided, please provide the asha number in the request body"

  /company/{companyId}/member/{learnerId}/completions:
    get:
      tags:
        - "Enrollments"
      summary: "Learner course completions"
      operationId: "getMemberTranscript"
      parameters:
        - name: "companyId"
          in: "path"
          description: ""
          required: true
          type: "integer"
        - name: "learnerId"
          in: "path"
          description: ""
          required: true
          type: "string"
      responses:
        200:
          description: "success"
          schema:
            $ref: "#/definitions/LearnerCompletions"
        403:
          description: "Access token was authenticated but not authorized for this feature"

  /accreditations:
    get:
      tags:
        - "Accreditation"
      summary: ""
      description: ""
      operationId: "getAccreditations"
      parameters:
        - name: "filter[courseId]"
          in: "query"
          description: ""
          required: true
          type: "integer"
        - name: "filter[activeOnDate]"
          in: "query"
          description: "Will limit results to approvals only active on provided date, use todays date, or the date of a past completion etc."
          required: true
          type: "string"
          format: "date"
        - name: "filter[discipline]"
          in: "query"
          description: "discipline constant"
          required: false
          type: "string"
        - name: "filter[state]"
          in: "query"
          description: "match any. example: TX,AR"
          required: false
          type: "array"
          items:
            type: "string"
            enum: ["AL","AK","AZ","AR","CA","CO","CT","DE","DC","FL","GA","HI","ID","IL","IN","IA","KS","KY","LA","ME","MD","MA","MI","MN","MS","MO","MT","NE","NV","NH","NJ","NM","NY","NC","ND","OH","OK","OR","PA","RI","SC","SD","TN","TX","UT","VT","VA","WA","WV","WI","WY"]
        # - name: "filter[activeAfterDate]"
        #   in: "query"
        #   description: "activeAfterDate and activeBeforeDate are used together to create a between date range"
        #   required: false
        #   type: "string"
        #   format: "date"
        # - name: "filter[activeBeforeDate]"
        #   in: "query"
        #   description: "activeAfterDate and activeBeforeDate are used together to create a between date range"
        #   required: false
        #   type: "string"
        #   format: "date"
        # - name: "page"
        #   in: "query"
        #   description: "used with limit to break list into pages"
        #   required: false
        #   type: "integer"
        # - name: "limit"
        #   in: "query"
        #   description: "limit the number of results"
        #   required: false
        #   type: "integer"
        # - name: "sort"
        #   in: "query"
        #   description: "sort by field"
        #   required: false
        #   type: "string"
        # - name: "direction"
        #   in: "query"
        #   description: "sort direction: asc | desc"
        #   required: false
        #   type: "string"
      responses:
        200:
          description: "success"
          schema:
            $ref: "#/definitions/Accreditations"
        403:
          description: "Access token was authenticated but not authorized for this feature"

definitions:
  GetCompany:
    type: "object"
    required: 
      - "data"
    properties: 
      data:
        type: "object"
        required: 
          - "id"
          - "company_name"
          - "name"
          - "support_email"
          - "email_sender_name"
          - "reply_to_email"
          - "reply_to_email_sender_name"
          - "embedded_css"
          - "asset_folder_location"
          - "company_image_url"
          - "subscription_length_in_days"
          - "company_cert_image_url"
          - "settings_json"
          - "username_type"
          - "username_input_label"
          - "username_prefix"
          - "username_input_rules"
          - "username_input_min_length"
          - "username_input_max_length"
          - "username_watermark"
          - "username_label"
          - "example_username"
          - "primary_url"
          - "certificate_cc_recipients"
          - "non_credit_certificate_cc_recipients"
          - "login_welcome_message"
          - "homepage_replacement_text"
          - "company_access_levels"
          - "contract_status"
          - "asha_provider_code"
          - "ce_broker_provider_code"
          - "features"
          - "license_filters"
          - "company_type"
        properties: 
          id: 
            type: "number"
            example: 4
          company_name: 
            type: "string"
            example: "Demo University"
          name: 
            type: "string"
            example: "Demo University"
          support_email: 
            type: "string"
            example: "help@example.com"
          asset_folder_location: 
            type: "string"
            example: "/web/frontend/images/demo/"
          company_image_url: 
            type: "string"
            example: "https://www.example.com/image.png"
          company_cert_image_url: 
            type: "string"
            example: "https://www.example.com/image.jpg"
          username_type: 
            type: "string"
            example: "finitlast"
          username_input_label: 
            type: "string"
            example: "Custom Username Suffix"
          username_input_rules: 
            type: "string"
            example: "numeric"
          username_input_min_length: 
            type: "number"
            example: 4
          username_input_max_length: 
            type: "number"
            example: 4
          username_watermark: 
            type: "string"
            example: "Username (Email address)"
          username_label: 
            type: "string"
            example: "f initial + lastname + any 4 digits"
          example_username: 
            type: "string"
            example: "email@example.com"
          primary_url: 
            type: "string"
            example: "demo.example.com"
          login_welcome_message: 
            type: "string"
            example: "<h3>Welcome to the Demo University!</h3>\r\n<p><strong>We're glad you made it. Welcome to the easiest online continuing education portal ever built. </strong></p>"
          company_access_levels: 
            type: "array"
            items: 
              type: "object"
              properties: 
                id: 
                  type: "number"
                  example: 2
                access_level: 
                  type: "string"
                  example: "unlimited"
                is_default: 
                  type: "boolean"
                  example: true
          contract_status: 
            required: 
              - "id"
              - "contract_status_constant"
              - "name"
              - "constant"
            properties: 
              id: 
                type: "number"
                example: 1
              contract_status_constant: 
                type: "string"
                example: "Demo"
              name: 
                type: "string"
                example: "Demo"
              constant: 
                type: "string"
                example: "demo"
            type: "object"
          asha_provider_code: 
            type: "string"
            example: "ACGB"
          ce_broker_provider_code: 
            type: "string"
            example: "8744"
          features: 
            type: "array"
            items: 
              type: "object"
              properties: 
                id: 
                  type: "number"
                  example: 1
                feature: 
                  type: "string"
                  example: "university-reporting"
                name: 
                  type: "string"
                  example: "Download Reports"
                constant: 
                  type: "string"
                  example: "university-reporting"
          license_filters: 
            type: "array"
            items: 
              type: "object"
              properties: 
                id: 
                  type: "number"
                  example: 1
                license_group: 
                  required: 
                    - "id"
                    - "constant"
                    - "name"
                  properties: 
                    id: 
                      type: "number"
                      example: 1
                    constant: 
                      type: "string"
                      example: "pt-pta"
                    name: 
                      type: "string"
                      example: "PT/PTA"
                  type: "object"
                name: 
                  type: "string"
                  example: "PT"
                constant: 
                  type: "string"
                  example: "pt"
          company_type: 
            type: "string"
            example: "SUBSCRIPTION"
            
  AccessLevels:
    type: "object"
    required: 
      - "data"
    properties: 
      data: 
        type: "array"
        items: 
          type: "object"
          properties: 
            id: 
              type: "number"
              example: 3
            constant: 
              type: "string"
              example: "unlimited"
            name: 
              type: "string"
              example: "unlimited"
  
  AccessLevelCourses:
    type: "object"
    required: 
      - "data"
      - "metadata"
    properties: 
      data: 
        type: "array"
        items: 
          type: "object"
          properties: 
            id: 
              type: "number"
              example: 1234
            name: 
              type: "string"
              example: "Ethics and Management"
            description: 
              type: "string"
              example: "<p><span style=\"font-size: small;\">Lorem ipsum dolor sit amet, consectetur adipiscing elit. In sit amet faucibus metus. Nullam volutpat nunc in dolor auctor posuere. Nulla at vulputate tellus. Quisque a tellus metus. Praesent placerat hendrerit est ut dictum. Donec nulla magna, vestibulum sit amet rutrum id, faucibus vitae eros. Ut dictum tellus sit amet facilisis commodo. Aenean nulla leo, mattis sed condimentum et, eleifend at justo. Morbi eget varius ligula. In eget mollis magna.</span></p>"
            hours: 
              type: "number"
              example: 0.5
            category_name:
              type: "string"
              example: "Management Training"
            approval_status_name:
              type: "string"
              example: "Professional Development - No CE Credit"
            item_format_name: 
              type: "string"
              example: "Text"
            preview_link: 
              type: "string"
              example: "/uploads/courses/1234/online/image.png"
            preview_name: 
              type: "string"
              example: "Book Cover"
            preview_type: 
              type: "string"
              example: "image"
            is_credit:
              type: "boolean"
              example: true
            broadcase_date:
              type: "string"
              example: "2019-11-07T09:46:37-0600"
      metadata: 
        required: 
          - "page"
          - "limit"
          - "total"
        properties: 
          page: 
            type: "number"
            example: 1
          limit: 
            type: "number"
            example: 10
          total: 
            type: "string"
            example: "424"
        type: "object"
        
  AssignmentsIncomplete:
    type: "object"
    required: 
      - "data"
    properties: 
      data: 
        type: "array"
        items: 
          type: "object"
          properties: 
            orderItemId: 
              type: "number"
              example: 1234567
            userFirstName: 
              type: "string"
              example: "John"
            userLastName: 
              type: "string"
              example: "Smith"
            organizationalUnit: 
              type: "string"
              example: "Southern Branch"
            groups: 
              type: "string"
              example: "Managers,onboarding"
            curriculum: 
              type: "string"
              example: "Clinical Management Training"
            course: 
              type: "string"
              example: "Leading With Confidence"
            enrollmentDate: 
              type: "string"
              example: "2019-11-07T09:46:37-0600"
            dueDate: 
              type: "string"
              example: "2019-11-10T00:00:00-0600"
            isPastDue: 
              type: "string"
              example: "1"
  AssignmentsMeta:
    type: "object"
    required: 
      - "data"
    properties: 
      data: 
        required: 
          - "userFirstNames"
          - "userLastNames"
          - "organizationalUnits"
          - "groups"
          - "curricula"
          - "courses"
          - "enrollmentDates"
          - "dueDates"
        properties: 
          userFirstNames: 
            type: "string"
            example: "Jim,John,Mary,Carol"
          userLastNames: 
            type: "string"
            example: "Smith,Doe,Johnson,Brown"
          organizationalUnits: 
            type: "string"
            example: "Northern Branch,Southern Branch"
          groups: 
            type: "string"
            example: "Clinical Staff,Facility A"
          curricula: 
            type: "string"
            example: "Clinical Manager Leadership Training,New Hire Orientation Program"
          courses: 
            type: "string"
            example: "Leading With Confidence,Combating Stress"
          enrollmentDates: 
            type: "string"
            example: "2013-03-13,2013-11-27,2014-07-03,2014-07-04"
          dueDates: 
            type: "string"
            example: "2014-03-13,2014-11-27,2015-07-03,2013-11-29"
        type: "object"

  BOCLevel:
    type: "object"
    required: 
      - "data"
    properties: 
      data: 
        type: "array"
        items: 
          type: "object"
          properties: 
            id: 
              type: "number"
              example: 1
            name: 
              type: "string"
              example: "Essential"
              
  ClinicalTopic:
    type: "object"
    required: 
      - "data"
    properties: 
      data: 
        type: "array"
        items: 
          type: "object"
          properties: 
            id: 
              type: "number"
              example: 272
            name: 
              type: "string"
              example: "Abuse/Neglect"
              
  CorpAdminReport:
    type: "object"
    required: 
      - "data"
    properties: 
      data: 
        type: "object"
        required: 
          - "Student Activity"
          - "Curriculum"
          - "Students"
          - "Utilization"
        properties: 
          Student Activity: 
            type: "array"
            items: 
              type: "object"
              properties: 
                id: 
                  type: "number"
                  example: 1
                name: 
                  type: "string"
                  example: "All Courses - All Statuses"
                applicable_filters: 
                  type: "array"
                  items: 
                    type: "string"
                  example: 
                    - "license_type"
                    - "access_level"
                    - "organizational_unit"
                    - "group"
                    - "hire_date"
                    - "company_enrollment_date"
                    - "course"
                    - "curriculum"
          Curriculum: 
            type: "array"
            items: 
              type: "object"
              properties: 
                id: 
                  type: "number"
                  example: 9
                name: 
                  type: "string"
                  example: "Curriculum - Percent Complete Report"
                applicable_filters: 
                  type: "array"
                  items: 
                    type: "string"
                  example: 
                    - "license_type"
                    - "access_level"
                    - "organizational_unit"
                    - "group"
                    - "hire_date"
                    - "company_enrollment_date"
                    - "curriculum"
          Students: 
            type: "array"
            items: 
              type: "object"
              properties: 
                id: 
                  type: "number"
                  example: 14
                name: 
                  type: "string"
                  example: "Active Students"
                applicable_filters: 
                  type: "array"
                  items: 
                    type: "string"
                  example: 
                    - "license_type"
                    - "access_level"
                    - "organizational_unit"
                    - "group"
                    - "hire_date"
                    - "company_enrollment_date"
          Utilization: 
            type: "array"
            items: 
              type: "object"
              properties: 
                id: 
                  type: "number"
                  example: 17
                name: 
                  type: "string"
                  example: "Utilization - Last Month"
                applicable_filters: 
                  type: "string"
                  example: "null"
  CourseType:
    type: "object"
    required: 
      - "data"
    properties: 
      data: 
        type: "array"
        items: 
          type: "object"
          properties: 
            id: 
              type: "number"
              example: 2
            name: 
              type: "string"
              example: "Webinar"

  CompanyCourses:
    type: "object"
    required: 
      - "data"
    properties: 
      data:
        type: "object"
        required: 
          - "current_page"
          - "items_per_page"
          - "total"
          - "items"
        properties: 
          current_page: 
            type: "number"
            example: 1
          items_per_page: 
            type: "number"
            example: 10
          total: 
            type: "number"
            example: 785
          items: 
            type: "array"
            items: 
              type: "object"
              properties: 
                id: 
                  type: "number"
                  example: 1234
                name: 
                  type: "string"
                  example: "Managing A Winning Team"
                description: 
                  type: "string"
                  example: "<p><span style=\"font-size: 10pt;\">Lorem ipsum dolor sit amet, consectetur adipiscing elit. In sit amet faucibus metus. Nullam volutpat nunc in dolor auctor posuere. Nulla at vulputate tellus. Quisque a tellus metus. Praesent placerat hendrerit est ut dictum. Donec nulla magna, vestibulum sit amet rutrum id, faucibus vitae eros.</span></p>"
                hours: 
                  type: "number"
                  example: 0.75
                category_name: 
                  type: "string"
                  example: "Communication"
                approval_status_name: 
                  type: "string"
                  example: "Professional Development - No CE Credit"
                item_format_name: 
                  type: "string"
                  example: "Video"
                preview_link: 
                  type: "string"
                  example: "https://www.example.com"
                preview_name: 
                  type: "string"
                  example: "Managing A Winning Team"
                preview_type: 
                  type: "string"
                  example: "image"
                is_credit: 
                  type: "boolean"
                  example: false
                broadcastDate: 
                  type: "string"
                  example: "2020-03-31T05:00:00.000Z"
                completed_on: 
                  type: "string"
                  example: "2020-03-31T05:00:00.000Z"
                incomplete: 
                  type: "string"
                  example: "0"
                is_soft_due_date: 
                  type: "string"
                  example: "hard"

  CompanyCurricula:
    type: "object"
    required: 
      - "data"
    properties: 
      data: 
        type: "array"
        items: 
          type: "object"
          properties: 
            id: 
              type: "number"
              example: 102
            name: 
              type: "string"
              example: "Example Curriculum"
            description: 
              type: "string"
              example: "Description for the curriculum"
            sendCourseReminder: 
              type: "boolean"
              example: true
            companyId: 
              type: "number"
              example: 4
            courses: 
              type: "array"
              items: 
                type: "object"
                properties: 
                  id: 
                    type: "number"
                    example: 3341
                  name: 
                    type: "string"
                    example: "Example course name"
                  dueDays: 
                    type: "number"
                    example: 1
                  availableDays: 
                    type: "number"
                    example: 0
                  isSoftDueDate: 
                    type: "boolean"
                    example: true

  CompanyFeatures:
    type: "object"
    required: 
      - "data"
    properties: 
      data: 
        type: "array"
        items: 
          type: "object"
          properties: 
            constant: 
              type: "string"
              example: "university-reporting"
            name: 
              type: "string"
              example: "Download Reports"
  FilteredReport:
    type: "object"
    required: 
      - "data"
    properties: 
      data: 
        type: "array"
        items: 
          type: "object"
          properties: 
            id: 
              type: "number"
              example: 3
            name: 
              type: "string"
              example: "Southern Branch"
            company_id: 
              type: "number"
              example: 4
            filter_sets: 
              type: "array"
              items: 
                type: "object"
                properties: 
                  id: 
                    type: "number"
                    example: 123
                  name: 
                    type: "string"
                    example: "Access Level (unlimited)"
            courses: 
              type: "array"
              items: 
                type: "object"
                properties: 
                  id: 
                    type: "number"
                    example: 9999
                  name: 
                    type: "string"
                    example: "Example Course"
            curricula: 
              type: "array"
              items: 
                type: "object"
                properties: 
                  id: 
                    type: "number"
                    example: 99
                  name: 
                    type: "string"
                    example: "Example Curriculum"
            corp_admin_report_ids: 
              type: "array"
              items: 
                type: "number"
              example: 
                - 1

  FilterSet:
    type: "object"
    required: 
      - "data"
    properties: 
      data: 
        type: "array"
        items: 
          type: "object"
          properties: 
            id: 
              type: "number"
              example: 99
            name: 
              type: "string"
              example: "Demo University"
            description: 
              type: "string"
              example: "Description for Demo University"
            isViewableByCorpAdmin: 
              type: "boolean"
              example: false
            isEditableByCorpAdmin: 
              type: "boolean"
              example: false
            companyId: 
              type: "number"
              example: 4
            curricula: 
              type: "array"
              items: 
                type: "object"
                properties: 
                  id: 
                    type: "number"
                    example: 9
                  name: 
                    type: "string"
                    example: "Clinical Manager Leadership Training"
                  priorCompletionThreshold: 
                    type: "string"
                    example: "null"
                  sendCourseReminder: 
                    type: "boolean"
                    example: false
                  courses: 
                    type: "array"
                    items: 
                      type: "object"
                      properties: 
                        id: 
                          type: "number"
                          example: 1234
                        name: 
                          type: "string"
                          example: "Leading With Confidence"
                        dueDate: 
                          type: "string"
                          example: "2016-05-31T00:00:00-0500"
                        dueDays: 
                          type: "string"
                          example: "null"
            filters: 
              type: "array"
              items: 
                type: "object"
                properties: 
                  id: 
                    type: "number"
                    example: 99
                  type: 
                    type: "string"
                    example: "Group"
                  attributes: 
                    type: "array"
                    items: 
                      type: "object"
                      properties: 
                        id: 
                          type: "number"
                          example: 999

  InstructLevel:
    type: "object"
    required: 
      - "data"
    properties: 
      data: 
        type: "array"
        items: 
          type: "object"
          properties: 
            id: 
              type: "number"
              example: 1
            name: 
              type: "string"
              example: "Beginner"
              
  OrgUnitList:
    type: "object"
    required: 
        - "data"
    properties: 
      data: 
        type: "array"
        items:
          type: "object"
          properties: 
            formattedLabel: 
              type: "string"
              example: "- Demo Region"
            path:
              type: "string"
              example: "Demo Company"
            id: 
              type: "number"
              example: 115
            label: 
              type: "string"
              example: "Demo Region"
            name: 
              type: "string"
              example: "Demo Region"
            parentUnit:
              type: "number"
              example: 113
              
  EnabledResources:
    type: "object"
    required: 
      - "data"
    properties: 
      data: 
        type: "array"
        items: 
          type: "object"
          properties: 
            constant: 
              type: "string"
              example: "users"
            name: 
              type: "string"
              example: "Users"
            description: 
              type: "string"
              example: "User Related Features"
  UserFilters:
    type: "object"
    required: 
      - "data"
      - "metadata"
    properties: 
      data: 
        type: "array"
        items: 
          type: "object"
          properties: 
            id: 
              type: "number"
              example: 123456
            username: 
              type: "string"
              example: "jsmith@example.com"
            first_name: 
              type: "string"
              example: "Jeff"
            last_name: 
              type: "string"
              example: "Smith"
            email: 
              type: "string"
              example: "jsmith123@example.com"
            access_level_constant: 
              type: "string"
              example: "limited"
            is_active: 
              type: "boolean"
              example: false
            corporate_email_address: 
              type: "string"
              example: "jsmith@examplecorp.com"
            is_corporate_admin: 
              type: "boolean"
              example: false
            employee_id: 
              type: "string"
              example: "jsmith12345"
      metadata:
        type: "object"
        required: 
          - "total"
          - "warnings"
        properties: 
          total: 
            type: "number"
            example: 100
          warnings: 
            type: "array"
            items: 
              type: "integer"
            example: []

  AliasConfig:
    type: "object"
    required: 
      - "data"
    properties: 
      data:
        type: "object"
        required: 
          - "id"
          - "name"
          - "logo"
          - "alias"
          - "forum_url"
          - "subdomain"
          - "theme"
          - "username_watermark"
          - "username_label"
          - "example_username"
          - "landing_message"
          - "landing_replacement"
          - "username_input_label"
          - "default_access_level"
        properties: 
          id: 
            type: "string"
            example: "4"
          name: 
            type: "string"
            example: "Demo University"
          logo: 
            type: "string"
            example: "https://www.example.com/image.png"
          alias: 
            type: "string"
            example: "demo"
          forum_url: 
            type: "string"
            example: "https://www.example.com/forums"
          subdomain: 
            type: "string"
            example: "demo"
          theme: 
            type: "string"
            example: "/theme/css"
          username_watermark: 
            type: "string"
            example: "Username (Email address)"
          username_label: 
            type: "string"
            example: "f initial + lastname + any 4 digits"
          example_username: 
            type: "string"
            example: "jsmith@email.com"
          landing_message: 
            type: "string"
            example: "<h3>Welcome to the Demo University!</h3>\r\n<p><strong>We're glad you made it. Welcome to the easiest online continuing education portal ever built. </strong></p>"
          landing_replacement: 
            type: "string"
            example: "www.examplereplacement.com"
          username_input_label: 
            type: "string"
            example: "Custom Username Suffix"
          default_access_level: 
            type: "string"
            example: "unlimited"

  GroupSet:
    type: "object"
    required: 
    - "data"
    properties:
      data:
        type: "array"
        items:
          type: "object"
          properties: 
            id: 
              type: "number"
              example: 123
            name: 
              type: "string"
              example: "Admin Assistant (t)"
            users: 
              type: "number"
              example: 2
  GroupUsers:
    type: "object"
    required: 
      - "data"
    properties: 
      data: 
        type: "array"
        items: 
          type: "object"
          properties: 
            user_id: 
              type: "string"
              example: "123456"
            unique_id: 
              type: "string"
              example: "54321"
            first_name: 
              type: "string"
              example: "Smith"
            last_name: 
              type: "string"
              example: "Jeff"
            email_address: 
              type: "string"
              example: "jsmith@example.com"

  UserLogin:
      type: "object"
      required: 
        - "data"
        - "messages"
      properties: 
        data:
          type: "object"
          required: 
            - "access_token"
            - "refresh_token"
            - "first_name"
            - "last_name"
            - "email_address"
            - "is_admin"
            - "user_id"
            - "account_setup_complete"
            - "is_corporate_admin"
          properties: 
            access_token: 
              type: "string"
              example: "access_token"
            refresh_token: 
              type: "string"
              example: "refresh_token"
            first_name: 
              type: "string"
              example: "John"
            last_name: 
              type: "string"
              example: "Smith"
            email_address: 
              type: "string"
              example: "jsmith@example.com"
            is_admin: 
              type: "boolean"
              example: false
            user_id: 
              type: "number"
              example: 504973
            account_setup_complete: 
              type: "boolean"
              example: false
            is_corporate_admin: 
              type: "boolean"
              example: true
        messages:
          type: "object"
          required: 
            - "message"
          properties: 
            message: 
              type: "string"
              example: "User was authenticated"

  ResourcePages:
    type: "object"
    required: 
    - "data"
    properties: 
      data: 
        type: "array"
        items: 
          type: "object"
          properties: 
            id: 
              type: "number"
              example: 123
            name: 
              type: "string"
              example: "Example Resource Page Title"
            link: 
              type: "string"
              example: "example-resource-page-title"

  Enrollment:
    type: "object"
    required: 
      - "data"
    properties: 
      links: 
        type: "object"
        properties:
          scormContent: 
            type: "string"
            description: "Link to consume SCORM content for this enrollment"
            example: "https://link.to.restici/registrationId"
            format: "uri"
          certificate: 
            type: "string"
            description: "Link to download certificate of completion"
            example: "https://link.to.certificate/enrollmentId"
            format: "uri"
      data:
        type: "object" 
        required: 
          - "id"
          - "userId"
          - "learnerId"
          - "courseId"
          - "courseName"
          - "companyId"
          - "companyName"
          - "format"
          - "hours"
          - "passingGrade"
          - "isPassing"
          - "assignmentDate"
        properties: 
          id: 
            type: "string"
            example: "3632108"
            description: "enrollmentId"
          userId: 
            type: "string"
            example: "97230"
          learnerId: 
            type: "string"
            example: "E1024"
          courseId: 
            type: "string"
            example: "1698"
          courseName: 
            type: "string"
            example: "HIV/AIDS - What You Need to Know"
          companyId: 
            type: "string"
            example: "4"
          companyName: 
            type: "string"
            example: "Demo University"
          curriculumId: 
            type: "string"
            example: "42"
          curriculumName: 
            type: "string"
            example: "HIV/AIDS"
          enrollmentType: 
            type: "string"
            example: "Assigned"
          format: 
            type: "string"
            example: "Text"
          hours: 
            type: "string"
            example: "1.00"
          completedOn: 
            type: "string"
            example: "2018-10-20"
            format: "date"
          attemptId: 
            type: "string"
            example: "3640761"
          highestGrade: 
            type: "string"
            example: "0.75"
          passingGrade: 
            type: "string"
            example: "0.70"
          isPassing: 
            type: "string"
            example: "0"
          assignmentDate: 
            type: "string"
            example: "2018-07-16"
            format: "date"
          dueDate: 
            type: "string"
            example: "2018-07-31"
            format: "date"
          expires: 
            type: "string"
            example: "1"
          examId: 
            type: "string"
            example: "290"
            
  CourseCatalogCourseDetail:
    type: "object"
    required: 
      - "data"
    properties: 
      links:
        type: "object"
        properties:
          sco: 
            type: "string"
            example: "/api/v2/company/153/course/9876/proxy/download"
            description: "Link to proxy sco file so it can be imported into another LMS"
            format: "uri"
          scoDetail:
            type: "string"
            format: "uri"
            example: "/api/v2/course/9876/sco"
          accreditations:
            type: "string"
            example: "/api/v2/accreditations?courseId=9876&activeOnDate=2020-01-30"
            description: "API Link to accreditations for course"
            format: "uri"
      data: 
        type: "object"
        required: 
          - "id"
          - "createdAt"
          - "courseId"
          - "isActive"
          - "companyId"
          - "name"
          - "description"
          - "format"
          - "instructionalLevel"
          - "bocInstructionalLevel"
          - "hours"
          - "outline"
          - "summary"
          - "goals"
          - "disciplines"
          - "categories"
          - "authors"
          - "clinicalTopics"
          - "isSearchable"
        properties: 
          id: 
            type: "string"
            example: "432"
          createdAt: 
            type: "string"
            example: "2016-01-15"
          courseId: 
            type: "string"
            example: "9876"
          isActive: 
            type: "boolean"
            example: true
          companyId: 
            type: "string"
            example: "153"
          name: 
            type: "string"
            example: "How to build a flux capacitor"
          description: 
            type: "string"
            example: "course description"
          format: 
            type: "string"
            example: "video"
          instructionalLevel: 
            type: "string"
            example: "Intermediate"
          bocInstructionalLevel: 
            type: "string"
            example: "Essential"
          hours: 
            type: "string"
            example: "1.5"
          outline: 
            type: "string"
            example: ""
          summary: 
            type: "string"
            example: ""
          goals: 
            type: "string"
            example: ""
          disciplines: 
            type: "array"
            items: 
              type: "object"
              properties: 
                id: 
                  type: "string"
                  example: "1"
                constant: 
                  type: "string"
                  example: "pt-pta"
                name: 
                  type: "string"
                  example: "PT/PTA"
          categories: 
            type: "array"
            items: 
              type: "object"
              properties: 
                id: 
                  type: "string"
                  example: "8"
                name: 
                  type: "string"
                  example: "Texas Physical Therapy Ethics"
          authors: 
            type: "array"
            items: 
              type: "object"
              properties: 
                id: 
                  type: "string"
                  example: "42"
                name: 
                  type: "string"
                  example: "Robert Martin"
          clinicalTopics: 
            type: "array"
            items: 
              type: "object"
              properties: 
                id: 
                  type: "string"
                  example: "5"
                name: 
                  type: "string"
                  example: "Aphasia"
          ashaCode: 
            type: "string"
            example: "ACGB0022"
          code: 
            type: "string"
            example: "HCEU229"
          isSearchable: 
            type: "boolean"
            example: true
            
  Accreditations:
    type: "object"
    required: 
      - "data"
    properties: 
      data: 
        required: 
          - "page"
          - "limit"
          - "total"
          - "items"
        properties: 
          # page: 
          #   type: "number"
          #   example: 1
          # limit: 
          #   type: "number"
          #   example: 10
          # total: 
          #   type: "number"
          #   example: 114248
          items: 
            type: "array"
            items: 
              type: "object"
              properties: 
                id: 
                  type: "string"
                  example: "112233"
                courseId: 
                  type: "string"
                  example: "9876"
                accreditingCompanyId: 
                  type: "string"
                  example: "1"
                discipline: 
                  required: 
                    - "id"
                    - "constant"
                    - "name"
                  properties: 
                    id: 
                      type: "string"
                      example: "1"
                    constant: 
                      type: "string"
                      example: "pt-pta"
                    name: 
                      type: "string"
                      example: "PT/PTA"
                  type: "object"
                states: 
                  type: "array"
                  items: 
                    type: "object"
                    properties: 
                      code: 
                        type: "string"
                        example: "TX"
                      name: 
                        type: "string"
                        example: "Texas"
                category: 
                  required: 
                    - "id"
                    - "name"
                  properties: 
                    id: 
                      type: "string"
                      example: "17"
                    name: 
                      type: "string"
                      example: "Interactive"
                  type: "object"
                status: 
                  required: 
                    - "id"
                    - "constant"
                    - "name"
                    - "isCredit"
                  properties: 
                    id: 
                      type: "string"
                      example: "1"
                    constant: 
                      type: "string"
                      example: "approved"
                    name: 
                      type: "string"
                      example: "Approved"
                    isCredit: 
                      type: "boolean"
                      example: true
                  type: "object"
                code: 
                  type: "string"
                  example: "P3633"
                hours: 
                  type: "string"
                  example: "2.5"
                statement: 
                  type: "string"
                  example: ""
                activationDate: 
                  type: "string"
                  example: "2020-01-01"
                expirationDate: 
                  type: "string"
                  example: "2020-12-31"
                mediaCompletionRequired: 
                  type: "boolean"
                  example: false
                ashaCourseNumber: 
                  type: "string"
                  example: "547"
                ceBrokerCourseNumber: 
                  type: "number"
                  example: 554433
                  
  CompanyMember:
    required: 
      - "company_id"
      - "first_name"
      - "last_name"
      - "employee_id"
      - "access_level"
      - "is_active"
      - "is_coporate_admin"
    properties: 
      company_id: 
        type: "number"
        example: 153
      first_name: 
        type: "string"
        example: "Robert"
      last_name: 
        type: "string"
        example: "Martin"
      employee_id: 
        description: "learnerId, unique key to identify company member, often from HR platform"
        type: "string"
        example: "E2345"
      access_level: 
        type: "string"
        enum: ["limited","limited-plus","unlimited"]
        example: "unlimited"
      is_active: 
        type: "boolean"
        example: true
      is_coporate_admin: 
        type: "boolean"
        example: false
      asha_code: 
        description: "National ASHA Certification Number"
        type: "string"
        example: "A12345"
      email_address: 
        type: "string"
        example: "rmartin@example.com"
        format: "email"
      hire_date: 
        type: "string"
        example: "2018-02-13"
      organizational_unit_id: 
        type: "number"
        example: 987
      address_1: 
        type: "string"
        example: "1234 N Main st"
      address_2: 
        type: "string"
        example: ""
      city: 
        type: "string"
        example: "Dallas"
      state: 
        description: "State code (ex: 'TX', 'AR', 'VA')"
        type: "string"
        example: "TX"
      zip: 
        description: "Address Zip Code (ex: '00000', '00000-0000')"
        type: "string"
        example: "43449"
      country: 
        type: "string"
        example: "USA"
      phone_number: 
        type: "string"
        example: "555-555-5555"
      phone_number_type: 
        type: "string"
        enum: ["primary","alternate","fax"]
        example: "primary"
      phone_country: 
        description: "Country Code (ex: 'US')"
        type: "string"
        example: "US"
      license_type: 
        type: "string"
        example: "pt"
      license_state: 
        type: "string"
        example: "TX"
      license_number: 
        type: "string"
        example: "R3214"
      license_expires_on: 
        type: "string"
        example: "2020-12-31"
      group_ids: 
        type: "array"
        items: 
          type: "number"
        example: 
          - 4567
          - 9876

  LearnerCompletions:
    type: "object"
    required: 
      - "data"
    properties: 
      data: 
        required:
          - "items"
        properties:
          items: 
            type: "array"
            items: 
              required: 
                - "enrollmentId"
                - "learnerId"
                - "courseId"
                - "completedOn"
              properties:
                enrollmentId: 
                  type: "string"
                  example: "3632108"
                  description: "enrollmentId"
                learnerId: 
                  type: "string"
                  example: "E1024"
                courseId: 
                  type: "string"
                  example: "1698"
                courseName: 
                  type: "string"
                  example: "HIV/AIDS - What You Need to Know"
                completedOn: 
                  type: "string"
                  example: "2018-10-20"
                links:
                  type: "array"
                  items:
                    properties:
                      enrollmentDetail:
                        type: "string"
                        format: "url"
                        example: "/api/v2/enrollment/3632108"
                      certificate:
                        type: "string"
                        format: "url"
                        example: "/api/v2/enrollment/3632108/certificate"

  UserLicense:
    required: 
      - "license_type"
      - "license_number"
      - "license_expires_on"
      - "license_state"
    properties: 
      license_type: 
        type: "string"
        example: "pt"
      license_number: 
        type: "string"
        example: "123456"
      license_expires_on: 
        type: "string"
        example: "2020-03-31T05:00:00.000Z"
      license_state: 
        type: "string"
        example: "TX"

  UserDetail:
    required: 
      - "data"
    properties: 
      data:
        type: "object"
        required: 
          - "asha_code"
          - "first_name"
          - "last_name"
          - "temporary_username"
          - "billing_address"
          - "emails"
          - "licenses"
          - "shipping_address"
          - "phones"
          - "corporate"
        properties:
          asha_code:
            type: "string"
            example: "ACGB0022"
          first_name: 
            type: "string"
            example: "Fred"
          last_name: 
            type: "string"
            example: "Smith"
          temporary_username: 
            type: "string"
            example: "fred@example.com"
          billing_address: 
            required: 
              - "type"
              - "address_1"
              - "city"
              - "state"
              - "zip_code"
            properties: 
              type: 
                type: "string"
                example: "billing"
              address_1: 
                type: "string"
                example: "101 Main St."
              address_2: 
                type: "string"
                example: ""
              city: 
                type: "string"
                example: "Bridgewater"
              state: 
                type: "string"
                example: "NJ"
              zip_code: 
                type: "string"
                example: "08807"
            type: "object"
          shipping_address: 
            required: 
              - "type"
              - "address_1"
              - "city"
              - "state"
              - "zip_code"
            properties: 
              type: 
                type: "string"
                example: "shipping"
              address_1: 
                type: "string"
                example: "101 Main St"
              address_2: 
                type: "string"
                example: ""
              city: 
                type: "string"
                example: "Bridgewater"
              state: 
                type: "string"
                example: "NJ"
              zip_code: 
                type: "string"
                example: "08807"
            type: "object"
          phones: 
            type: "array"
            items: 
              type: "object"
              properties: 
                id: 
                  type: "number"
                  example: 215024
                type: 
                  type: "string"
                  example: "primary"
                country: 
                  type: "string"
                  example: "US"
                number: 
                  type: "string"
                  example: "555-555-1911"
                extension: 
                  type: "string"
                  example: ""
          emails: 
            type: "array"
            items: 
              type: "object"
              properties: 
                id: 
                  type: "number"
                  example: 39406
                primary: 
                  type: "boolean"
                  example: true
                confirmed: 
                  type: "boolean"
                  example: true
                email_address: 
                  type: "string"
                  example: "fred@example.com"
          licenses: 
            type: "array"
            items: 
              type: "object"
              properties: 
                id: 
                  type: "number"
                  example: 123456
                type: 
                  type: "string"
                  example: "mt-lmt"
                state: 
                  type: "string"
                  example: "NJ"
                number: 
                  type: "string"
                  example: "18KT00089765"
                expires_on: 
                  type: "string"
                  example: "11/30/2018"
                is_valid: 
                  type: "boolean"
                  example: true
          corporate:
            type: "object"
            required: 
              - "employee_id"
              - "is_corporate_admin"
              - "is_active"
              - "access_level"
              - "email_address"
            properties: 
              employee_id: 
                type: "string"
                example: "278011"
                description: "learnerId aka employeeId, memberId, uniqueId"
              is_corporate_admin: 
                type: "boolean"
                example: false
              subscription_expires_on:
                type: "string"
                example: "2020-03-31T05:00:00.000Z"
              is_active: 
                type: "boolean"
                example: true
              access_level: 
                type: "string"
                example: "unlimited"
              email_address: 
                type: "string"
                example: "fred@example.com"
              hire_date:
                type: "string"
                example: "01/01/2020"
              group_ids: 
                type: "array"
                items: 
                  type: "object"
                example: []
              organizational_unit_id:
                type: "number"
                example: 119
        
  CourseApproval:
    type: "object"
    required: 
      - "data"
    properties: 
      data: 
        type: "array"
        items: 
          type: "object"
          properties: 
            approval_id: 
              type: "number"
              example: 1234567
            is_credit: 
              type: "boolean"
              example: false
            state: 
              required: 
                - "code"
                - "name"
              properties: 
                code: 
                  type: "string"
                  example: "AK"
                name: 
                  type: "string"
                  example: "Alaska"
              type: "object"
            license_group: 
              required: 
                - "constant"
                - "name"
              properties: 
                constant: 
                  type: "string"
                  example: "rn"
                name: 
                  type: "string"
                  example: "RN"
              type: "object"
            status: 
              type: "string"
              example: "Compliance - No CE Credit"
            expiration_date: 
              type: "string"
              example: "2020-03-31T05:00:00.000Z"
            statement: 
              type: "string"
              example: ""
            provider_code: 
              type: "string"
              example: "AB12"
              
  CourseMaterials:
    type: "object"
    required: 
      - "data"
    properties: 
      data:
        type: "object"
        required: 
          - "audio"
          - "video"
          - "text"
        properties: 
          audio: 
            type: "array"
            items: 
              type: "object"
              properties: 
                name: 
                  type: "string"
                  example: "Course Notes"
                link: 
                  type: "string"
                  example: "/uploads/coursematerial/audio.mp3"
                delivery_type: 
                  type: "string"
                  example: "online"
          video: 
            type: "array"
            items: 
              type: "object"
              properties: 
                name: 
                  type: "string"
                  example: "Creating a Respectful Workplace"
                link: 
                  type: "string"
                  example: "/play/1234?mobile_alert=no&template=none"
                delivery_type: 
                  type: "string"
                  example: "online"
                run_time: 
                  type: "number"
                  example: 99
          text: 
            type: "array"
            items: 
              type: "object"
              properties: 
                name: 
                  type: "string"
                  example: "Creating a Respectful Workplace Course Manual"
                link: 
                  type: "string"
                  example: "/uploads/coursematerial/image.pdf"
                delivery_type: 
                  type: "string"
                  example: "online"
  GetCurriculum:
    type: "object"
    required: 
      - "data"
    properties: 
      data:
        type: "object"
        required: 
          - "id"
          - "name"
          - "description"
          - "priorCompletionThreshold"
          - "sendCourseReminder"
          - "companyId"
          - "courses"
          - "filterSets"
          - "deactivationDate"
        properties: 
          id: 
            type: "number"
            example: 35
          name: 
            type: "string"
            example: "Clinical Manager Leadership"
          description: 
            type: "string"
            example: "Leadership courses for new manager hires"
          priorCompletionThreshold: 
            type: "string"
            example: "730"
          sendCourseReminder: 
            type: "boolean"
            example: false
          companyId: 
            type: "number"
            example: 4
          courses: 
            type: "array"
            items: 
              type: "object"
              properties: 
                id: 
                  type: "number"
                  example: 2848
                name: 
                  type: "string"
                  example: "Leading With Confidence"
                dueDate: 
                  type: "string"
                  example: "06/30/2016"
                dueDays: 
                  type: "string"
                  example: "4"
                availableDate: 
                  type: "string"
                  example: "03/29/2016"
                availableDays: 
                  type: "string"
                  example: "15"
                isSoftDueDate: 
                  type: "boolean"
                  example: true
          filterSets: 
            type: "array"
            items: 
              type: "object"
            example: []
          deactivationDate: 
            type: "string"
            example: "02/19/2020"
